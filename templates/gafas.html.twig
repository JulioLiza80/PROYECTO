{% extends 'base.html.twig' %}

{% block title %}Optica Nova - Gafas
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" href="{{ asset('css/gafas.css') }}">
{% endblock %}

{% block body %}
	{{ include('comun/header.html.twig') }}

	<div
		class="example-wrapper py-8 ">

		<!-- Imagen de Banner -->
		<div class="banner-gafas-graduadas w-full h-[342px] relative mb-4">
			<img src="{{ asset('images/gafas-graduadas-banner.jpg') }}" alt="Banner Gafas Graduadas" class="absolute inset-0 w-full h-full object-cover object-bottom">
		</div>

		<!-- Contenedor breadcrumbs y filtros básicos -->
		<div
			class="flex items-center justify-between mb-8">

			<!-- Breadcrumbs (Alineado a la izquierda) -->
			<div class="flex mb-2">
				<button class="w-[124px] h-[42px] text-center shadow p-2 rounded-bl-3xl rounded-tr-3xl mr-3" onclick="window.location.href='/'">
					Inicio
				</button>
				<p class="w-[150px] h-[42px] text-center shadow p-2 rounded-bl-3xl rounded-tr-3xl">
					Gafas Graduadas
				</p>
			</div>


			<!-- Filtros básicos (Alineado a la derecha) -->
			<div
				class="flex items-center shadow w-[1147px] h-[42px] rounded mb-2">
				<!-- Filtros y número de gafas -->
				<div class="flex items-center mr-4 ml-4 ">
					<p class="mr-2">Resultados:
						{{ gafas|length }}
						gafas</p>
				</div>

				<!-- Paginación central -->
				<div
					class="text-center flex-grow mx-4 flex items-center justify-center">
					<!-- Flecha izquierda -->
					<i class="fa-solid fa-circle-left"></i>

					<p class="text-sm">
						Página 1 de 8
					</p>

					<!-- Flecha derecha -->
					<i class="fa-solid fa-circle-right"></i>
				</div>


				<!-- Ordenar por -->
				<div class="flex items-center mr-4">
					<label for="order" class="mr-2">Ordenar por:</label>
					<select id="order" class="border border-gray-300 rounded-lg p-1">
						<option value="precio-asc">Precio de más bajo a más alto</option>
						<option value="precio-desc">Precio de más alto a más bajo</option>
						<option value="relevancia">Relevancia</option>
					</select>
				</div>
			</div>
		</div>

		<div
			class="flex flex-row">

			<!-- Filtros de búsqueda -->
			<div
				class="flex flex-col w-[15%] min-w-[15%] bg-white me-10 rounded-lg shadow">

				<!-- Título Filtros con Icono -->
				<div class="flex justify-between items-center ml-3 mt-2">
					<p class="font-semibold text-[36px]">Filtros</p>
					<div id="reset-icon" class="cursor-pointer hover:rotate-animation">
						<svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" width="24" height="24" stroke-width="1.25">
							<path d="M4.05 11a8 8 0 1 1 .5 4m-.5 5v-5h5"></path>
						</svg>
					</div>
				</div>

				<div class="w-full h-px max-w-6xl mx-auto mt-3 mb-6" style="background-image: linear-gradient(90deg, rgba(128, 128, 128, 0) 1.46%, rgba(128, 128, 128, 0.6) 40.83%, rgba(128, 128, 128, 0.3) 65.57%, rgba(128, 128, 128, 0) 107.92%);"></div>


				<!-- Filtro Marca -->
				<div class="flex flex-col items-start ml-8 mt-1 mb-2">
					<p class="text-[24px] font-semibold">
						Marca
					</p>
					<div id="marcas-list" class="mt-1 ml-3">
						<ul class="list-none text-lg">
							{% for marca in marcas %}
								<li class="flex items-center text-gray-700 cursor-pointer">
									<input type="checkbox" class="marca-checkbox" data-marca="{{ marca }}" id="marca-{{ loop.index }}" class="mr-2">
									<label for="marca-{{ loop.index }}" class="text-gray-700">
										&nbsp;{{ marca|capitalize }}
									</label>
								</li>
							{% endfor %}
						</ul>
					</div>
				</div>


				<div class="w-full h-px max-w-6xl mx-auto mt-3 mb-6" style="background-image: linear-gradient(90deg, rgba(128, 128, 128, 0) 1.46%, rgba(128, 128, 128, 0.6) 40.83%, rgba(128, 128, 128, 0.3) 65.57%, rgba(128, 128, 128, 0) 107.92%);"></div>

				<!-- Filtro Precio -->
				<div class="flex flex-col items-start ml-8 mt-1 mb-2">
					<button id="precio-btn" class="text-[24px] font-semibold focus:outline-none">
						Precio
					</button>
					<!-- Rango de precios -->
					<div id="precio-range" class="mt-1 w-[380px] mb-2">
						<div class="flex items-center gap-2">
							<input type="number" id="precio-min" class="w-[70px] border border-gray-400 rounded p-2" placeholder="Min" min="0"/>
							<span class="text-gray-600">-</span>
							<input type="number" id="precio-max" class="w-[70px] border border-gray-400 rounded p-2" placeholder="Max" min="0"/>
							<button id="precio-borrar" class="py-2 px-2 hover:bg-novapurple text-white font-semibold rounded-lg  bg-[#9736af] transition duration-200">
								<svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" width="26" height="26" stroke-width="1.25">
									<path d="M4 7l16 0"></path>
									<path d="M10 11l0 6"></path>
									<path d="M14 11l0 6"></path>
									<path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
									<path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
								</svg>
							</button>
						</div>
					</div>
				</div>

				<div class="w-full h-px max-w-6xl mx-auto mt-3 mb-6" style="background-image: linear-gradient(90deg, rgba(128, 128, 128, 0) 1.46%, rgba(128, 128, 128, 0.6) 40.83%, rgba(128, 128, 128, 0.3) 65.57%, rgba(128, 128, 128, 0) 107.92%);"></div>


				<!-- Filtro Material Montura -->
				<div class="flex flex-col items-start ml-8 mt-1 mb-2">
					<button id="material-btn" class="text-[24px] font-semibold focus:outline-none">
						Material Montura
					</button>
					<div id="material-list" class="mt-1 mb-2 ml-3">
						<ul class="list-none text-lg">
							{% for material in materiales %}
								<li class="flex items-center text-gray-700 cursor-pointer">
									<input type="checkbox" class="material-checkbox" data-material="{{ material }}" id="material-{{ loop.index }}" class="mr-2">
									<label for="material-{{ loop.index }}" class="text-gray-700">
										&nbsp;{{ material|capitalize }}
									</label>
								</li>
							{% endfor %}
						</ul>
					</div>
				</div>

				<div class="w-full h-px max-w-6xl mx-auto mt-3 mb-6" style="background-image: linear-gradient(90deg, rgba(128, 128, 128, 0) 1.46%, rgba(128, 128, 128, 0.6) 40.83%, rgba(128, 128, 128, 0.3) 65.57%, rgba(128, 128, 128, 0) 107.92%);"></div>

				<!-- Filtro Tipo Montura -->
				<div class="flex flex-col items-start ml-8 mt-1 mb-2">
					<button id="tipo-btn" class="text-[24px] font-semibold focus:outline-none">
						Tipo Montura
					</button>
					<div id="tipo-list" class="mt-1 mb-2 ml-3">
						<ul class="list-none text-lg">
							{% for tipo in tiposMontura %}
								<li class="flex items-center text-gray-700 cursor-pointer">
									<input type="checkbox" class="tipo-checkbox" data-tipo="{{ tipo }}" id="tipo-{{ loop.index }}" class="mr-2">
									<label for="tipo-{{ loop.index }}" class="text-gray-700">
										&nbsp;{{ tipo|capitalize }}
									</label>
								</li>
							{% endfor %}
						</ul>
					</div>
				</div>
			</div>


			<!-- Grid de gafas con 4 columnas en pantallas grandes, 2 en medianas y 1 en móviles -->
			<div class="flex flex-row flex-wrap gap-x-10 gap-y-5 ml-12">
				{% for gafa in gafas %}

					<!-- Card de gafas -->
					<div
						class="gafa-card bg-white rounded-lg shadow transform transition md:max-w-48 max-w-40 md:max-h-48 max-h-40 duration-300 hover:scale-105 hover:shadow-xl" data-marca="{{ gafa.marca }}" data-material="{{ gafa.materialMontura }}" data-tipo="{{ gafa.tipoMontura }}">

						<!-- Imagen de las gafas -->
						<img
						src="{{ asset('images/gafas/' ~ gafa.imageName) }}" alt="{{ gafa.descripcion }}" class="w-full h-50 my-2 object-cover">

						<!-- Contenido de la card -->
						<div class="px-4 py-2">
							<h3 class="text-gray-800 raleway font-light mb-2 text-sm">{{ gafa.marca }}
								{{ gafa.modelo }}</h3>
							<p class="text-gray-900 raleway font-semibold mb-2 text-lg">{{ gafa.precio|number_format(2, ',', '') }}€</p>
						</div>
					</div>
				{% endfor %}
			</div>
		</div>
	</div>

	{{ include('comun/footer.html.twig') }}

	 <script>
			// Evento al pulsar el icono de resetear filtros
			document.getElementById('reset-icon').addEventListener('click', () => {
				// Desmarcar todos los checkboxes
				document.querySelectorAll('.marca-checkbox, .material-checkbox, .tipo-checkbox').forEach(checkbox => {
					checkbox.checked = false;
				});

				// Limpiar los campos de precio
				document.getElementById('precio-min').value = '';
				document.getElementById('precio-max').value = '';

				// Restablecer todos los elementos visibles
				aplicarFiltros(); // Asegúrate de tener la función aplicarFiltros() del script anterior
			});


			// Función unificada para aplicar todos los filtros
			function aplicarFiltros() {
				const selectedMarcas = Array.from(document.querySelectorAll('.marca-checkbox:checked')).map(checkbox => checkbox.dataset.marca);
				const selectedMaterials = Array.from(document.querySelectorAll('.material-checkbox:checked')).map(checkbox => checkbox.dataset.material);
				const selectedTipos = Array.from(document.querySelectorAll('.tipo-checkbox:checked')).map(checkbox => checkbox.dataset.tipo);
				const minPrice = parseFloat(document.getElementById('precio-min').value);
				const maxPrice = parseFloat(document.getElementById('precio-max').value);
	
				const gafas = document.querySelectorAll('.gafa-card');
	
				gafas.forEach(gafa => {
					const gafaMarca = gafa.dataset.marca;
					const gafaMaterial = gafa.dataset.material;
					const gafaTipo = gafa.dataset.tipo;
					const gafaPrice = parseFloat(
						gafa.querySelector('.raleway.font-semibold.mb-2.text-lg')
							.textContent.replace('€', '').replace(',', '.')
					);
	
					const cumpleMarca = selectedMarcas.length === 0 || selectedMarcas.includes(gafaMarca);
					const cumpleMaterial = selectedMaterials.length === 0 || selectedMaterials.includes(gafaMaterial);
					const cumpleTipo = selectedTipos.length === 0 || selectedTipos.includes(gafaTipo);
					const cumplePrecio = (isNaN(minPrice) || gafaPrice >= minPrice) && (isNaN(maxPrice) || gafaPrice <= maxPrice);
	
					if (cumpleMarca && cumpleMaterial && cumpleTipo && cumplePrecio) {
						gafa.style.display = 'block';
					} else {
						gafa.style.display = 'none';
					}
				});
			}
	
			// Asociar la función unificada a los eventos de filtros
			document.querySelectorAll('.marca-checkbox, .material-checkbox, .tipo-checkbox').forEach(checkbox => {
				checkbox.addEventListener('change', aplicarFiltros);
			});
	
			// Filtrar automáticamente cuando cambien los campos de precio
			document.querySelectorAll('#precio-min, #precio-max').forEach(input => {
				input.addEventListener('input', aplicarFiltros);
			});
	
			// Botón para borrar filtros de precio
			document.getElementById('precio-borrar').addEventListener('click', () => {
				document.getElementById('precio-min').value = '';
				document.getElementById('precio-max').value = '';
				aplicarFiltros();
			});
		</script>


{% endblock %}
